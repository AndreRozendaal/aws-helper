xml = '<?xml version="1.0"?>'

def append(value):
    global xml
    xml = xml + value

def basicsToXml(snowdata):
    append("<isdmisupported>false</isdmisupported>")
    append("<isapmsupported>false</isapmsupported>")
    append("<isplugandplay>false</isplugandplay>")
    append("<primarybustype>false</primarybustype>")
    append("<secondarybustype>false</secondarybustype>")
    append("<hasusb>false</hasusb>")
    append("<biosreleasedate>1900-01-01T01:00:00</biosreleasedate>")
    append("<biosmanufacturer />")
    append("<biosserialnumber>" + snowdata["biosserialnumber"] +"</biosserialnumber>")
    append("<biosversion>(n/a)</biosversion>")
    append("<company>false</company>")
    append("<dmiversion>false</dmiversion>")
    append("<hasflashbios>false</hasflashbios>")
    append("<hostname>" + snowdata["hostname"] +"</hostname>")
    append("<hostmachine />")
    append("<hypervisorname />")
    append("<isportable>false</isportable>")
    append("<lastupdate>2022-02-08T08:56:10</lastupdate>")
    append("<numberofprocessors>" + snowdata["processors"] +"</numberofprocessors>")
    append("<manufacturer>AWS</manufacturer>")
    append("<model>Virtual Machine</model>")
    append("<username>(n/a)</username>")
    append("<installdate>1900-01-01T01:00:00</installdate>")
    append("<sitename>" + snowdata["site"] +"</sitename>")
    append("<clientidentifier>" + snowdata["biosserialnumber"] +"</clientidentifier>")
    append("<clienttype>" + snowdata["clienttype"] +"</clienttype>")
    append("<isvdi>false</isvdi>")
    append("<isvirtual>true</isvirtual>")
    append("<ismobiledevice>false</ismobiledevice>")
    append("<istablet />")
    return ''

def memoryToXml(snowdata):
    append("<memory>")
    append("<freeslots>0</freeslots>")
    append("<freeswap>0</freeswap>")
    append("<maxphysical>0</maxphysical>")
    append("<totalslots>0</totalslots>")
    append("<totalphysical>" + str(snowdata["memory"]) +"</totalphysical>")
    append("<totalvirtual>0</totalvirtual>")
    append("<freevirtual>0</freevirtual>")
    append("<freephysical>0</freephysical>")
    append("<totalswap>0</totalswap>")
    append("</memory>")
    return ''

def processorToXml(snowdata):
    append("<processor>")
    append("<hyperthreading>1</hyperthreading>")
    append("<mathcoprocessor>1</mathcoprocessor>")
    append("<mmx>1</mmx>")
    append("<numberofcores>" + snowdata["coresperprocessor"] +"</numberofcores>")
    append("<voltage>4</voltage>")
    append("<currentclockspeed>0</currentclockspeed>")
    append("<manufacturer>(n/a)</manufacturer>")
    append("<maxclockspeed>" + snowdata["processorspeed"] +"</maxclockspeed>")
    append("<name>" + snowdata["processorname"] +"</name>")
    append("<processorid>0</processorid>")
    append("<model>" + snowdata["processormodel"] +"</model>")
    append("<numberofprocessors>" + snowdata["processors"] +"</numberofprocessors>")
    append("</processor>")
    return ''

def applicationToXml(snowdata):
    for item in snowdata["software"]:
        append("<application>")
        append("<binarytype>0</binarytype>")
        append("<format>0</format>")
        append("<installdate>1900-01-01T12:00:00</installdate>")
        append("<name>" + item["Application"] +"</name>")
        append("<islocal>true</islocal>")
        append("<ismsi>true</ismsi>")
        append("<isshortcut>false</isshortcut>")
        append("<processortype>0</processortype>")
        append("<uninstallstring>0</uninstallstring>")
        append("<filename />")
        append("<filepath>(n/a)</filepath>")
        append("<filedatetime>1900-01-01T12:00:00</filedatetime>")
        append("<filesize>0</filesize>")
        append("<version>" + item["Version"] +"</version>")
        append("<manufacturer>" + item["Manufacturer"] +"</manufacturer>")
        append("<language>Language Neutral</language>")
        append("<fullcappeakdate>1900-01-01T12:00:00</fullcappeakdate>")
        append("<isrecognized>true</isrecognized>")
        append("<coresublimit>0</coresublimit>")
        append("<issubcapacity>false</issubcapacity>")
        append("<subcappeakdate>1900-01-01T12:00:00</subcappeakdate>")
        append("<pvusubcap>0</pvusubcap>")
        append("<ispvu>false</ispvu>")
        append("<coresubcap>0</coresubcap>")
        append("<pvusublimit>0</pvusublimit>")
        append("</application>")
    return ''

def operatingsystemToXml(snowdata):
    append("<operatingsystem>")
    append("<activedesktop>0</activedesktop>")
    append("<cdkey>0</cdkey>")
    append("<defaultbrowser>0</defaultbrowser>")
    append("<tempdirectory>0</tempdirectory>")
    append("<username>0</username>")
    append("<useruilanguage>0</useruilanguage>")
    append("<buildnumber>" + snowdata["osbuild"] +"</buildnumber>")
    append("<buildtype>0</buildtype>")
    append("<codeset>0</codeset>")
    append("<computername>0</computername>")
    append("<countrycode>0</countrycode>")
    append("<currenttimezonecode>0</currenttimezonecode>")
    append("<domainname>0</domainname>")
    append("<localecode>0</localecode>")
    append("<manufacturer>" + snowdata["osmanufacturer"] +"</manufacturer>")
    append("<name>" + snowdata["osname"] +"</name>")
    append("<organization>0</organization>")
    append("<registereduser>0</registereduser>")
    append("<serialnumber>0</serialnumber>")
    append("<systemdirectory>0</systemdirectory>")
    append("<systemuilanguagecode>0</systemuilanguagecode>")
    append("<version>" + snowdata["osversion"] +"</version>")
    append("<versioninfo />")
    append("<windowsdirectory>0</windowsdirectory>")
    append("</operatingsystem>")
    return ''

def networkadapterToXml(snowdata):
    append("<networkadapter>")
    append("<dnsserver>0</dnsserver>")
    append("<macaddress>" + snowdata["macaddress"] +"</macaddress>")
    append("<productname />")
    append("<defaultipgateway>0</defaultipgateway>")
    append("<dhcpenabled>true</dhcpenabled>")
    append("<ipaddress>" + snowdata["ipaddress"] +"</ipaddress>")
    append("<ipsubnet>0</ipsubnet>")
    append("<dhcpserver>0</dhcpserver>")
    append("</networkadapter>")
    return ''

def clientToXml(snowdata):
    append("<client>")
    basicsToXml(snowdata)
    memoryToXml(snowdata)    
    applicationToXml(snowdata)
    networkadapterToXml(snowdata)
    operatingsystemToXml(snowdata)
    processorToXml(snowdata)
    append("</client>")
    return ''

def toXML(snowdata):
    clientToXml(snowdata)
    return xml